#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil
#+TITLE:Computational Thinking
#+AUTHOR: X Ellis

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/digixc/8-CS-ProblemSolving">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></>
      <li><a href="assessment.html">Assessment</a></li>

    </ul>
  </div>

<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END

* Objectives
:PROPERTIES:
:HTML_CONTAINER_CLASS: objectives
:END:
** Developing *Programming and Development* learning strand, specifically:
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
+ develop problem solving skills by *by pattern recognition*
+ learn how to devise solutions for simple *sorting problems*
+ develop skills in *implementing* a working sorting algorithm
 
* Algorithms - pattern recognition
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It 
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END: 
- In the previous lesson, we have learned the concept of =algorithmic thinking=, that is, developing a step by step instructions to solve a problem.
- Using the sorting quiz score problem from lesson 1, the problem requires you to sort a list of quiz scores from the lowest to the highest.
- Can you explain why the following solution is not an appropriate algorithm for a computer to carry out?
#+BEGIN_SRC 

Look through all the quiz scores
put down the largest one first
then look through the rest of the quiz scores
put down the next largest one after the previous largest one
carry on until all quiz scores are checked

#+END_SRC
- Now take a look at the solution below, can you explain what makes this algorithm better?
- Can you indetify a pattern in it?
- Can you work out the outcome of the following algorithm?  Have the quiz scores sorted?
#+BEGIN_SRC
1. put the list of quiz scores in an array 
2. compare the first score with the second score
3. if the first score is higher
4.       swap its position with the second score in the array
5. Compare the second score with the third score
6. if the second score is higher
7.       swap its position with the third score in the array
8. repeat the above steps until all scores have been compared

#+END_SRC

** Try It - implementing a sorting algorithm
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END: 
- Let's try to implement the algorithm above in Python. 
- Here is a list of key Python skills you need:
  - [[./1_Part.html#sec-1-3][ Use an array to store data and array index]]
  - [[./1_Part.html#sec-1-2][Comparing numbers]]
  - [[./1_Part.html#sec-1-5][Swap the positions of two items in an array]]

- Some steps will be shown to you, but some steps you have to work out yourself. But if you stuck, search online for help or ask your teacher.
- Open a new file in IDLE or Thorny,
  1. put the list of quiz scores in an array. In Python 
     #+BEGIN_SRC 
quizScore = [23, 67, 54, 44, 35, 34]
     
     #+END_SRC
  2. compare the first score with the second score
  3. if the first score is higher. The above two steps can be written in Python as one:
           #+BEGIN_SRC 
if quizScore[0]>quizScore[1]:
     
     #+END_SRC
  4. swap its position with the second score in the array
           #+BEGIN_SRC 
      Can you work out how to swap those two's positions?
     
     #+END_SRC
  5. Compare the second score with the third score
  6. if the second score is higher
  7. swap its position with the third score
  8. repeat the above steps until all scores have been compared

** Badge It - Silver
:PROPERTIES:
:HTML_CONTAINER_CLASS: silver
:END:
*** Learning strand: Programming and Development
- Finish the implementation so that all quiz scores have been compared and upload a screenshot of your code
- To help you with picturing what the algorithm does, here is an animation of sorting a list of numbers using the same algorithm.

[[./img/bubbleSortPassOne.gif]]
** Badge It - Gold
:PROPERTIES:
:HTML_CONTAINER_CLASS: gold
:END:
*** Learning strand: Programming and Development
- Test your Python implmentation and explain why the whole quiz score is not sorted.
- Upload screenshots of your test and written explaination

** Badge It - Platinum
:PROPERTIES:
:HTML_CONTAINER_CLASS: platinum
:END:
*** Learning strand: Programming and Development
- Implementing a complete solution so that all the quiz scores have been sorted from the lowest to the highest.
- Screenshot your code and testing result and upload to www.bournetolearn.com
